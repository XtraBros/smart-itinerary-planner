name: Deploy to AWS

on:
  push:
    branches:
      - feature/24/sentosa
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  REGISTRY_URL: 770091703903.dkr.ecr.ap-southeast-1.amazonaws.com
  IMAGE_NAME: smart-itinerary-planner
  IMAGE_TAG: latest
  HOST: ec2-54-151-153-19.ap-southeast-1.compute.amazonaws.com
  USERNAME: ubuntu
  AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Replace placeholders in config.json
        run: |
          cp config.json.example config.json
          sed -i 's/@MAPBOX_ACCESS_TOKEN@/${{ secrets.MAPBOX_ACCESS_TOKEN }}/g' config.json
          sed -i 's/@OPENAI_API_KEY@/${{ secrets.OPENAI_API_KEY }}/g' config.json

      - name: Docker login
        run: |
          aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ env.REGISTRY_URL }}

      - uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.AWS_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/opt/app"

      - name: Execute commands on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.AWS_SSH_KEY }}
          script: |
            cd /opt/app
            aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ env.REGISTRY_URL }}
            docker compose down --rmi all
            docker compose up --build -d
            docker compose logs
